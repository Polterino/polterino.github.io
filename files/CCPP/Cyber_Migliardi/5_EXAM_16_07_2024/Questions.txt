1/10) Is the program leak20240716.c vulnerable to a buffer overflow of type stack smashing/control hijacking?
(If yes why, if no why)

2/10) Is the program leak20240716.c vulnerable to an attack of type heap manipulation?
(If yes why, if no why)

3/10) Is the program leak20240716.c vulnerable to an attack of type stack information exfiltration?
(If yes why, if no why)

4/10) Is the program leak20240716.c vulnerable to an attack of type heap information exfiltration?
(If yes why, if no why)

5/10) Is the program leak20240716.c vulnerable to any of the previously mentioned attacks if stack protectors (canaries) are in place?
(If yes why, if no why)

6/10) Can not executable stack prevent the return loop in loop3-20240716.c?
(If yes why, if no why)

7/10) Can stack protectors (canaries) prevent the return loop in loop3-20240716.c?
(If yes why, if no why)

8/10) Can ASLR prevent the return loop in loop3-20240716.c?
(If yes why, if no why)

9/10) Assume you know the address of a http server with the shellshock vulnerability and a myCommand CGI program available (in the default CGI-BIN folder).
Write the curl command that makes an http request that exploits the shellshock vulnerability and executes the "cat /etc/passwd" command redirecting output to a /tmp/log.txt file

10/10) Does ASLR protect from a return to libc attack?
(If yes why, if no why)
